/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __HELLO_SKEL_H__
#define __HELLO_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct hello {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *tracepoint__syscalls__sys_enter_execve;
	} progs;
	struct {
		struct bpf_link *tracepoint__syscalls__sys_enter_execve;
	} links;

#ifdef __cplusplus
	static inline struct hello *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct hello *open_and_load();
	static inline int load(struct hello *skel);
	static inline int attach(struct hello *skel);
	static inline void detach(struct hello *skel);
	static inline void destroy(struct hello *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
hello__destroy(struct hello *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
hello__create_skeleton(struct hello *obj);

static inline struct hello *
hello__open_opts(const struct bpf_object_open_opts *opts)
{
	struct hello *obj;
	int err;

	obj = (struct hello *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = hello__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	hello__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct hello *
hello__open(void)
{
	return hello__open_opts(NULL);
}

static inline int
hello__load(struct hello *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct hello *
hello__open_and_load(void)
{
	struct hello *obj;
	int err;

	obj = hello__open();
	if (!obj)
		return NULL;
	err = hello__load(obj);
	if (err) {
		hello__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
hello__attach(struct hello *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
hello__detach(struct hello *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *hello__elf_bytes(size_t *sz);

static inline int
hello__create_skeleton(struct hello *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "hello";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "hello.rodata";
	s->maps[0].map = &obj->maps.rodata;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "tracepoint__syscalls__sys_enter_execve";
	s->progs[0].prog = &obj->progs.tracepoint__syscalls__sys_enter_execve;
	s->progs[0].link = &obj->links.tracepoint__syscalls__sys_enter_execve;

	s->data = hello__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *hello__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x48\x13\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1b\0\
\x01\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x0e\0\0\0\xb7\x03\0\0\0\
\0\0\0\x85\0\0\0\x06\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\xe0\xff\xff\xff\xb7\
\x02\0\0\x20\0\0\0\x85\0\0\0\x10\0\0\0\xbf\x01\0\0\0\0\0\0\x18\0\0\0\xff\xff\
\xff\xff\0\0\0\0\0\0\0\0\x55\x01\x07\0\0\0\0\0\xbf\xa3\0\0\0\0\0\0\x07\x03\0\0\
\xe0\xff\xff\xff\x18\x01\0\0\x0e\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x0c\0\0\0\
\x85\0\0\0\x06\0\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x48\x65\x6c\x6c\x6f\
\x20\x77\x6f\x72\x6c\x64\x21\x0a\0\x63\x6f\x6d\x6d\x20\x69\x73\x20\x25\x73\x0a\
\0\x47\x50\x4c\0\x13\0\0\0\x05\0\x08\0\x01\0\0\0\x04\0\0\0\x04\x50\x88\x01\x01\
\x51\0\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\
\x06\x73\x17\x8c\x01\x17\0\0\x02\x2e\x01\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\
\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x03\x34\0\x03\x25\x49\x13\x3a\
\x0b\x3b\x0b\x02\x18\0\0\x04\x05\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x05\x34\
\0\x02\x18\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x06\x34\0\x02\x22\x03\x25\x3a\
\x0b\x3b\x0b\x49\x13\0\0\x07\x01\x01\x49\x13\0\0\x08\x21\0\x49\x13\x37\x0b\0\0\
\x09\x26\0\x49\x13\0\0\x0a\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x0b\x24\0\x03\x25\
\x0b\x0b\x3e\x0b\0\0\x0c\x34\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\0\0\x0d\x0f\0\
\x49\x13\0\0\x0e\x15\x01\x49\x13\x27\x19\0\0\x0f\x05\0\x49\x13\0\0\x10\x18\0\0\
\0\x11\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x12\x34\0\x03\x25\x49\x13\x3a\
\x0b\x3b\x05\0\0\x13\x0f\0\0\0\x14\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\
\x0b\x02\x18\0\0\x15\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x16\x0d\0\x03\
\x25\x49\x13\x3a\x0b\x3b\x05\x38\x0b\0\0\0\x95\x01\0\0\x05\0\x01\x08\0\0\0\0\
\x01\0\x0c\0\x01\x08\0\0\0\0\0\0\0\x02\x03\xa8\0\0\0\x08\0\0\0\x0c\0\0\0\x02\
\x03\xa8\0\0\0\x01\x5a\x0c\0\x05\x01\x01\0\0\x03\x03\x69\0\0\0\0\x08\x02\xa1\0\
\x03\x03\xde\0\0\0\0\x0f\x02\xa1\x01\x04\x10\0\x05\x11\x01\0\0\x05\x02\x91\0\
\x0e\0\x07\x05\x01\0\0\x06\0\x0f\0\x0a\xa5\0\0\0\0\x07\x75\0\0\0\x08\x7e\0\0\0\
\x0e\0\x09\x7a\0\0\0\x0a\x04\x06\x01\x0b\x05\x08\x07\x0c\x06\x8a\0\0\0\x02\xb1\
\x09\x8f\0\0\0\x0d\x94\0\0\0\x0e\xa5\0\0\0\x0f\xa9\0\0\0\x0f\xae\0\0\0\x10\0\
\x0a\x07\x05\x08\x0d\x75\0\0\0\x11\xb6\0\0\0\x09\x01\x12\x0a\x08\x07\x04\x12\
\x0a\xc3\0\0\0\x02\x8c\x01\x09\xc8\0\0\0\x0d\xcd\0\0\0\x0e\xa5\0\0\0\x0f\xdd\0\
\0\0\x0f\xae\0\0\0\0\x13\x07\x75\0\0\0\x08\x7e\0\0\0\x0c\0\x14\x0b\xf5\0\0\0\0\
\x14\x02\xa1\x02\x07\x7a\0\0\0\x08\x7e\0\0\0\x04\0\x0a\x0d\x05\x04\x07\x7a\0\0\
\0\x08\x7e\0\0\0\x20\0\x0d\x16\x01\0\0\x15\x1d\x40\x01\x6a\x39\x16\x11\x45\x01\
\0\0\x01\x6b\x39\0\x16\x19\xa5\0\0\0\x01\x6c\x39\x08\x16\x1a\x7c\x01\0\0\x01\
\x6d\x39\x10\x16\x1c\x8c\x01\0\0\x01\x6e\x39\x40\0\x15\x18\x08\x01\xfd\x1f\x16\
\x12\x74\x01\0\0\x01\xfe\x1f\0\x16\x14\x78\x01\0\0\x01\xff\x1f\x02\x16\x16\x78\
\x01\0\0\x01\0\x20\x03\x16\x17\x01\x01\0\0\x01\x01\x20\x04\0\x0a\x13\x07\x02\
\x0a\x15\x08\x01\x07\x88\x01\0\0\x08\x7e\0\0\0\x06\0\x0a\x1b\x07\x08\x07\x7a\0\
\0\0\x08\x7e\0\0\0\0\0\0\x7c\0\0\0\x05\0\0\0\0\0\0\0\x27\0\0\0\x33\0\0\0\x63\0\
\0\0\x6b\0\0\0\x70\0\0\0\x84\0\0\0\x95\0\0\0\x9a\0\0\0\xa7\0\0\0\xad\0\0\0\xc2\
\0\0\0\xca\0\0\0\xf1\0\0\0\xf5\0\0\0\xfc\0\0\0\x04\x01\0\0\x08\x01\0\0\x0c\x01\
\0\0\x11\x01\0\0\x20\x01\0\0\x26\x01\0\0\x34\x01\0\0\x42\x01\0\0\x46\x01\0\0\
\x52\x01\0\0\x55\x01\0\0\x5a\x01\0\0\x68\x01\0\0\x6f\x01\0\0\x55\x62\x75\x6e\
\x74\x75\x20\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x34\
\x2e\x30\x2e\x30\x2d\x31\x75\x62\x75\x6e\x74\x75\x31\x2e\x31\0\x68\x65\x6c\x6c\
\x6f\x2e\x62\x70\x66\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x70\x61\x72\x61\x6c\x6c\
\x65\x6c\x73\x2f\x44\x65\x73\x6b\x74\x6f\x70\x2f\x65\x62\x70\x66\x2f\x74\x61\
\x6c\x6c\x65\x72\x2f\x68\x65\x6c\x6c\x6f\x2d\x77\x6f\x72\x6c\x64\0\x5f\x5f\x5f\
\x5f\x66\x6d\x74\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\
\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x5f\
\x70\x72\x69\x6e\x74\x6b\0\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x69\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\
\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\0\x4c\x49\x43\x45\x4e\x53\x45\0\
\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\
\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\0\
\x69\x6e\x74\0\x62\x75\x66\x66\x65\x72\0\x73\x75\x63\x63\x65\x73\x73\0\x63\x74\
\x78\0\x65\x6e\x74\0\x74\x79\x70\x65\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\
\x68\x6f\x72\x74\0\x66\x6c\x61\x67\x73\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\
\x63\x68\x61\x72\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\x70\
\x69\x64\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x69\x64\0\x61\x72\x67\
\x73\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x64\x61\
\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x73\
\x79\x73\x5f\x65\x6e\x74\x65\x72\0\x24\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\0\x0e\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\
\x04\x02\0\0\x04\x02\0\0\x43\x02\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\x04\
\0\0\x04\x40\0\0\0\x1b\0\0\0\x03\0\0\0\0\0\0\0\x1f\0\0\0\x07\0\0\0\x40\0\0\0\
\x22\0\0\0\x09\0\0\0\x80\0\0\0\x27\0\0\0\x0c\0\0\0\0\x02\0\0\x2e\0\0\0\x04\0\0\
\x04\x08\0\0\0\x3a\0\0\0\x04\0\0\0\0\0\0\0\x3f\0\0\0\x05\0\0\0\x10\0\0\0\x45\0\
\0\0\x05\0\0\0\x18\0\0\0\x53\0\0\0\x06\0\0\0\x20\0\0\0\x57\0\0\0\0\0\0\x01\x02\
\0\0\0\x10\0\0\0\x66\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\x74\0\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\x01\x78\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\x01\x7d\0\0\0\0\0\
\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x08\0\0\0\x0a\0\0\0\x06\0\
\0\0\x8b\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\x9f\0\0\0\0\0\0\x01\x01\0\0\0\x08\
\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x0b\0\0\0\x0a\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\
\x0d\x06\0\0\0\xa4\0\0\0\x01\0\0\0\xa8\0\0\0\x01\0\0\x0c\x0d\0\0\0\0\0\0\0\0\0\
\0\x0a\x0b\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0f\0\0\0\x0a\0\0\0\x0e\0\0\0\xcb\
\x01\0\0\0\0\0\x0e\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0f\0\0\0\x0a\0\
\0\0\x0c\0\0\0\xfa\x01\0\0\0\0\0\x0e\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\
\0\x0b\0\0\0\x0a\0\0\0\x04\0\0\0\x2b\x02\0\0\0\0\0\x0e\x14\0\0\0\x01\0\0\0\x33\
\x02\0\0\x02\0\0\x0f\0\0\0\0\x11\0\0\0\0\0\0\0\x0e\0\0\0\x13\0\0\0\x0e\0\0\0\
\x0c\0\0\0\x3b\x02\0\0\x01\0\0\x0f\0\0\0\0\x15\0\0\0\0\0\0\0\x04\0\0\0\0\x74\
\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x73\x79\x73\x5f\
\x65\x6e\x74\x65\x72\0\x65\x6e\x74\0\x69\x64\0\x61\x72\x67\x73\0\x5f\x5f\x64\
\x61\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x74\x79\x70\x65\0\
\x66\x6c\x61\x67\x73\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\
\x70\x69\x64\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x75\
\x6e\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x69\x6e\x74\0\x6c\x6f\x6e\
\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x41\x52\
\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x63\x68\x61\x72\
\0\x63\x74\x78\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\
\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\
\x65\x63\x76\x65\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x63\
\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\
\x76\x65\0\x2f\x68\x6f\x6d\x65\x2f\x70\x61\x72\x61\x6c\x6c\x65\x6c\x73\x2f\x44\
\x65\x73\x6b\x74\x6f\x70\x2f\x65\x62\x70\x66\x2f\x74\x61\x6c\x6c\x65\x72\x2f\
\x68\x65\x6c\x6c\x6f\x2d\x77\x6f\x72\x6c\x64\x2f\x68\x65\x6c\x6c\x6f\x2e\x62\
\x70\x66\x2e\x63\0\x09\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x48\x65\
\x6c\x6c\x6f\x20\x77\x6f\x72\x6c\x64\x21\x5c\x6e\x22\x2c\x20\x30\x29\x3b\0\x09\
\x6c\x6f\x6e\x67\x20\x73\x75\x63\x63\x65\x73\x73\x20\x3d\x20\x62\x70\x66\x5f\
\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\x28\x62\x75\
\x66\x66\x65\x72\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x62\x75\x66\x66\x65\x72\
\x29\x29\x3b\0\x09\x69\x66\x20\x28\x73\x75\x63\x63\x65\x73\x73\x20\x21\x3d\x20\
\x30\x29\x7b\0\x09\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x63\x6f\x6d\
\x6d\x20\x69\x73\x20\x25\x73\x5c\x6e\x22\x2c\x20\x62\x75\x66\x66\x65\x72\x29\
\x3b\0\x7d\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\x63\
\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\
\x63\x76\x65\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x74\x72\x61\x63\x65\x70\x6f\x69\
\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\
\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\
\x2e\x31\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2e\x72\x6f\x64\x61\x74\x61\0\x6c\x69\
\x63\x65\x6e\x73\x65\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\
\x6c\0\0\0\x80\0\0\0\0\0\0\0\x08\0\0\0\xcf\0\0\0\x01\0\0\0\0\0\0\0\x0e\0\0\0\
\x10\0\0\0\xcf\0\0\0\x06\0\0\0\0\0\0\0\xf4\0\0\0\x30\x01\0\0\x02\x20\0\0\x30\0\
\0\0\xf4\0\0\0\0\0\0\0\0\0\0\0\x38\0\0\0\xf4\0\0\0\x52\x01\0\0\x11\x28\0\0\x60\
\0\0\0\xf4\0\0\0\x90\x01\0\0\x06\x2c\0\0\x70\0\0\0\xf4\0\0\0\xa4\x01\0\0\x02\
\x3c\0\0\xa0\0\0\0\xf4\0\0\0\xc9\x01\0\0\x01\x48\0\0\x0c\0\0\0\xff\xff\xff\xff\
\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\
\xb0\0\0\0\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\
\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x30\0\0\0\x32\0\0\0\x03\x01\x1f\x02\x0f\
\x05\x1e\x03\x43\0\0\0\0\xc6\xd4\x84\xc0\xa4\xd5\x0d\xee\x6b\x37\x92\xf4\xc1\
\x1a\x37\xe4\x4f\0\0\0\x01\x2e\x07\x35\xd9\x7e\xa1\x8f\x23\x59\x31\x15\x9a\x99\
\x69\x9f\x02\x59\0\0\0\x02\x65\xe4\xdc\x8e\x31\x21\xf9\x1a\x5c\x2c\x9e\xb8\x56\
\x3c\x56\x92\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x17\x05\x02\x0a\x14\x06\x03\x78\
\x58\x05\x11\x06\x03\x0a\x2e\x06\x03\x76\x3c\x05\x06\x06\x03\x0b\x2e\x06\x03\
\x75\x20\x05\x02\x06\x03\x0f\x20\x06\x03\x71\x58\x05\x01\x06\x03\x12\x20\x02\
\x01\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x70\x61\x72\x61\x6c\x6c\x65\x6c\x73\x2f\
\x44\x65\x73\x6b\x74\x6f\x70\x2f\x65\x62\x70\x66\x2f\x74\x61\x6c\x6c\x65\x72\
\x2f\x68\x65\x6c\x6c\x6f\x2d\x77\x6f\x72\x6c\x64\0\x2e\0\x2f\x75\x73\x72\x2f\
\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\x66\0\x68\x65\x6c\x6c\x6f\x2e\x62\x70\
\x66\x2e\x63\0\x76\x6d\x6c\x69\x6e\x75\x78\x2e\x68\0\x62\x70\x66\x5f\x68\x65\
\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x3a\x01\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\0\0\0\x01\0\x05\0\0\0\0\
\0\0\0\0\0\x0e\0\0\0\0\0\0\0\x6f\x01\0\0\0\0\x03\0\xa0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x76\x01\0\0\x01\0\x05\0\x0e\0\0\0\0\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x07\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x16\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc1\0\0\0\
\x12\0\x03\0\0\0\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\x67\x01\0\0\x11\0\x06\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x06\0\0\0\x78\0\0\0\0\0\0\
\0\x01\0\0\0\x06\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x11\0\0\0\0\0\0\0\
\x03\0\0\0\x09\0\0\0\x15\0\0\0\0\0\0\0\x03\0\0\0\x0d\0\0\0\x1f\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x23\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x10\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x14\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x18\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x1c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x20\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x24\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x28\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x2c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x30\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x34\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x38\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x3c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x40\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x44\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x48\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x4c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x50\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x54\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x58\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x5c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x60\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x64\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x68\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x6c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x70\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x74\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x78\0\0\0\0\0\0\0\
\x03\0\0\0\x0a\0\0\0\x7c\0\0\0\0\0\0\0\x03\0\0\0\x0a\0\0\0\x08\0\0\0\0\0\0\0\
\x02\0\0\0\x06\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x06\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x10\0\0\0\x20\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\xf0\x01\0\0\0\0\0\0\
\x03\0\0\0\x06\0\0\0\xfc\x01\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x14\x02\0\0\0\0\0\
\0\x04\0\0\0\x10\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x0c\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\
\x03\0\0\0\x0e\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x2a\0\0\0\0\0\0\0\
\x03\0\0\0\x0e\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x4b\0\0\0\0\0\0\0\
\x03\0\0\0\x0e\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0e\0\0\0\x7a\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x0f\x03\x05\x10\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\
\x72\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\
\x78\x74\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\
\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\
\x76\x65\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\
\x63\x6c\x69\x73\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\
\x72\x5f\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\
\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\
\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\
\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\
\x69\x67\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\
\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\
\x76\x65\0\x2e\x72\x65\x6c\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\
\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\
\x65\x63\x76\x65\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\
\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\
\x66\x72\x61\x6d\x65\0\x68\x65\x6c\x6c\x6f\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\
\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x6f\x64\x61\x74\
\x61\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\x4c\x49\x43\x45\x4e\x53\x45\0\x4c\x42\
\x42\x30\x5f\x32\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\
\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\
\x65\x63\x76\x65\x2e\x5f\x5f\x5f\x5f\x66\x6d\x74\x2e\x31\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x46\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x9c\x11\0\0\0\0\0\0\xa7\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\xec\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\
\0\0\xa8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\0\
\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\x0d\0\0\0\0\0\0\x20\0\0\0\
\0\0\0\0\x1a\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x56\x01\0\0\
\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\0\0\0\0\0\0\0\x1a\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x01\0\0\x01\0\0\0\x03\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x01\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x51\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x06\x01\0\0\0\0\0\0\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x1d\x01\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xa7\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2d\x02\0\0\0\
\0\0\0\x99\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xa3\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x0d\0\0\0\0\0\0\x50\
\0\0\0\0\0\0\0\x1a\0\0\0\x09\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x65\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc6\x03\0\0\0\0\0\0\x80\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x61\0\0\0\x09\0\0\0\x40\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x0e\0\0\0\0\0\0\xe0\x01\0\0\0\0\0\0\x1a\0\0\
\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x78\0\0\0\x01\0\0\0\x30\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x46\x04\0\0\0\0\0\0\x89\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x97\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xcf\x05\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x93\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x28\x10\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1a\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x62\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\
\x05\0\0\0\0\0\0\x5f\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x5e\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x10\0\0\0\
\0\0\0\x30\0\0\0\0\0\0\0\x1a\0\0\0\x10\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x0a\0\0\0\0\0\0\xa0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x10\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\
\x1a\0\0\0\x12\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x2d\x01\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x0a\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x29\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x08\x11\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\x14\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1d\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x20\x0b\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x19\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x28\x11\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\x1a\0\0\0\x16\0\0\0\x08\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\x83\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd4\
\x0b\0\0\0\0\0\0\x6b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\
\0\0\0\0\xb3\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\x98\x11\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\x1a\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x4e\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x0c\0\0\0\0\0\0\
\x98\x01\0\0\0\0\0\0\x01\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct hello *hello::open(const struct bpf_object_open_opts *opts) { return hello__open_opts(opts); }
struct hello *hello::open_and_load() { return hello__open_and_load(); }
int hello::load(struct hello *skel) { return hello__load(skel); }
int hello::attach(struct hello *skel) { return hello__attach(skel); }
void hello::detach(struct hello *skel) { hello__detach(skel); }
void hello::destroy(struct hello *skel) { hello__destroy(skel); }
const void *hello::elf_bytes(size_t *sz) { return hello__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
hello__assert(struct hello *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __HELLO_SKEL_H__ */
